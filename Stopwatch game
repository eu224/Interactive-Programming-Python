# template for "Stopwatch: The Game"
import simplegui

# define global variables
global count, min, sec, x, y
count = 0
sec = 0
min = 0
x = 0
y = 0
i1 = 0
i2 = 0

# define helper function format that converts time
# counting tenths of seconds into formatted string A:BC.D
def format(t):
    global count, sec, min
    t = count
    if (t == 10):
        sec += 1
        count = 0
        
    if (sec == 60):
        min += 1
        sec = 0
    pass
        
# define event handlers for buttons; "Start", "Stop", "Reset"
def start_timer():
    global i1, i2
    if ((i1 - i2) == 0):
        i1 += 1
        timer.start()

def stop_timer():
    global x, y, i1, i2
    if ((i1 - i2) == 1):
        i2 = i2 + 1
        timer.stop()
        y += 1
        if (count == 0):
            x += 1
    
def reset_timer():
    global count, sec, min, x, y
    timer.stop()
    count = 0
    sec = 0
    min = 0
    x = 0
    y = 0

def exit_timer():
    frame.stop()

# define event handler for timer with 0.1 sec interval
def timer_handler():
    global count
    count += 1
    
def draw_handler(canvas):
    global count, sec, min, x, y
    format(count)
    if (sec < 10):
        canvas.draw_text(str(min)+":"+str(0)+str(sec)+"."+str(count),(70,110),30,"White")
    else:
        canvas.draw_text(str(min)+":"+str(sec)+"."+str(count),(70,110),30,"White")
    canvas.draw_text(str(x)+"/"+str(y), (170,30), 20, "Yellow")

# create frame
frame = simplegui.create_frame("Stopwatch",220,200)

# register event handlers
timer = simplegui.create_timer(100,timer_handler)
frame.add_button("Start",start_timer,100)
frame.add_button("Stop",stop_timer,100)
frame.add_button("Reset",reset_timer,100)
frame.set_draw_handler(draw_handler)
frame.add_button("Exit Game",exit_timer,100)

# start timer and frame
frame.start()

# Please remember to review the grading rubric
"""
1 pt - The program successfully opens a frame with the stopwatch stopped.
1 pt - The program has a working "Start" button that starts the timer.
1 pt - The program has a working "Stop" button that stops the timer.
1 pt - The program has a working "Reset" button that stops the timer (if running) and resets the timer to 0.
4 pts - The time is formatted according to the description in step 4 above. Award partial credit corresponding to 1 pt per correct digit. For example, a version that just draw tenths of seconds as a whole number should receive 1 pt. A version that draws the time with a correctly placed decimal point (but no leading zeros) only should receive 2 pts. A version that draws minutes, seconds and tenths of seconds but fails to always allocate two digits to seconds should receive 3 pts.
2 pts - The program correctly draws the number of successful stops at a whole second versus the total number of stops. Give one point for each number displayed. If the score is correctly reported as a percentage instead, give only one point.
2 pts - The "Stop" button correctly updates these success/attempts numbers. Give only one point if hitting the "Stop" button changes these numbers when the timer is already stopped.
1 pt - The "Reset" button clears the success/attempts numbers.
"""
